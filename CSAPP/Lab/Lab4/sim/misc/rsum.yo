0x000:                      |     .pos 0
0x000: 30f40002000000000000 |     irmovq stack, %rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | 
0x018:                      |     .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |     .quad 0x0b0
0x030: 3800000000000000     |     .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |     .quad 0xc00
0x040: 0000000000000000     |     .quad 0
                            | 
0x048:                      | main:
0x048: 30f00000000000000000 |     irmovq $0, %rax
0x052: 30f71800000000000000 |     irmovq ele1, %rdi
0x05c: 806600000000000000   |     call rsum_list           # rsum_list(ls)
0x065: 90                   |     ret
                            | 
0x066:                      | rsum_list:
0x066: 2078                 |     rrmovq %rdi, %r8        # check whether ls == null
0x068: 6399                 |     xorq %r9, %r9
0x06a: 6198                 |     subq %r9, %r8
0x06c: 73a300000000000000   |     je ls_null
0x075: 50070000000000000000 |     mrmovq (%rdi), %rax     # val = ls->val
0x07f: a00f                 |     pushq %rax
0x081: 50770800000000000000 |     mrmovq 8(%rdi), %rdi    # ls = ls->next 
0x08b: 806600000000000000   |     call rsum_list          # rsum_list(ls->next)
0x094: 2008                 |     rrmovq %rax, %r8        # %r8 = rest
0x096: b00f                 |     popq %rax
0x098: 6080                 |     addq %r8, %rax
0x09a: 70a500000000000000   |     jmp done
0x0a3:                      | ls_null:
0x0a3: 6300                 |     xorq %rax, %rax
0x0a5:                      | done:
0x0a5: 90                   |     ret
                            | 
0x200:                      |     .pos 0x200
0x200:                      | stack:
